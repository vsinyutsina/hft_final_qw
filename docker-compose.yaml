networks:
  app:
    driver: bridge

volumes:
  postgres_data:
  superset_data:

services:
  postgres:
    image: postgres:15
    restart: always
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=bluepilled
      - POSTGRES_PASSWORD=
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./init.sh:/docker-entrypoint-initdb.d/init.sh
    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD= pg_isready -U bluepilled -d airflow_db" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      app:
        aliases:
          - postgresql
          - postgres

  airflow:
    image: apache/airflow:2.10.5-python3.9
    container_name: airflow
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://bluepilled:bluepilledTopPro@postgresql:5432/airflow_meta
      AIRFLOW__WEBSERVER__RBAC: "True"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./airflow-entrypoint.sh:/opt/airflow/entrypoint.sh
    ports:
      - "8080:8080"
    entrypoint: ["/opt/airflow/entrypoint.sh"]
    command: []
    healthcheck:
      test: [ "CMD-SHELL", "airflow db check" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      app:
        aliases:
          - airflow

  superset:
    image: apache/superset:latest
    container_name: superset
    restart: always
    depends_on:
      airflow:
        condition: service_started
    environment:
      SUPERSET_SECRET_KEY: "dummy-key"
      SUPERSET_SQLALCHEMY_DATABASE_URI: postgresql+psycopg2://bluepilled:@postgres:5432/superset_meta
    volumes:
      - superset_data:/var/lib/superset
    ports:
      - "8088:8088"
    networks:
      - app
    command:
      - /bin/sh
      - -c
      - |
        pip install psycopg2-binary && 
        superset db upgrade &&
        superset fab create-admin \
        --username admin \
        --firstname Admin \
        --lastname User \
        --email admin@example.com \
        --password  &&
        superset init &&
        superset run -h 0.0.0.0 -p 8088 --with-threads --reload --debugger